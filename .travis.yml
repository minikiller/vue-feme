language: node_js

node_js: 15.12.0
# node_js: 14.15.5

#CI处理过程承载的方式为docker容器
services:
  - docker

# script: 
#   - npm run test

before_script:
  - echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin   #login to dockerhub
  - curl https://cli-assets.heroku.com/install.sh | sh  #install heroku
  - docker login --username=$HEROKU_LOGIN --password=$HEROKU_API_KEY registry.heroku.com #login to registry.heroku.com


deploy:
- provider: script
  skip_cleanup: true
#  script: bash .travis/deploy.sh
  script:
    docker push mclitao/vue-feme:latest;
    docker push registry.heroku.com/$HEROKU_APP/web;
    heroku container:release web --app $HEROKU_APP;
    
  verbose: true
  on:
    branch: main
cache:
  directories:
  - "$HOME/.m2"

  

#CI/CD任务分包，编译、测试、发布等任务。  
#整个CI工作都会由Travis替你使用它自身的算力网络存储完成工作！！！
jobs:
  include:
    #-----------ci-task----------------------------
    # build
    - stage: clear docker images
      script:
        - docker images
    - stage: build docker images and push to registry
      script:
      #此处账户密码可以放在ENV中或到Travis后台配置一下也可以。
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t vue-feme .
        - docker tag vue-feme:latest mclitao/vue-feme:latest
        - docker push mclitao/vue-feme:latest
